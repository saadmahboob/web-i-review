{
    "swagger": "2.0",
    "info": {
        "version": "0.2.0",
        "title": "iReview DB API",
        "description": "Under Construction",
        "termsOfService": "To be created",
        "contact": {
            "name": "Sebastian Cheah",
            "email": "sebcheah@gmail.com",
            "url": "https://github.com/scheah"
        },
        "license": {
            "name": "MIT",
            "url": "http://opensource.org/licenses/MIT"
        }
    },
    "host": "localhost:3000",
    "basePath": "/api",
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/members": {
            "get": {
                "tags": [
                    "Member"
                ],
                "description": "Finds all members in the database with optional query parameters",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Filter by email (case-sensitive)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "firstName",
                        "in": "query",
                        "description": "Filter by first name (case-sensitive)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastName",
                        "in": "query",
                        "description": "Filter by last name (case-sensitive)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "mobileNumber",
                        "in": "query",
                        "description": "Filter by mobile number",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "member response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/member"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Member"
                ],
                "description": "Add a new member",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Member to add",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/member"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "invalid input"
                    },
                    "409": {
                        "description": "Member with that email already exists"
                    }
                }
            }
        },
        "/members/{email}": {
            "get": {
                "tags": [
                    "Member"
                ],
                "description": "Find member by email",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "description": "Email of member to fetch",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "member response",
                        "schema": {
                            "$ref": "#/definitions/member"
                        }
                    },
                    "404": {
                        "description": "member not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Member"
                ],
                "description": "Update an existing member",
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "description": "Email of member to fetch",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Specify the fields to change, in JSON format. Only fields you want to change are necessary",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/member"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "member updated"
                    },
                    "404": {
                        "description": "member not found"
                    },
                    "409": {
                        "description": "new email already used by existing member"
                    },
                    "500": {
                        "description": "an unexpected error occured"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Member"
                ],
                "description": "deletes a member based on the email supplied",
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "description": "Email of member to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "member deleted"
                    },
                    "404": {
                        "description": "member not found"
                    },
                    "500": {
                        "description": "an unexpected error occured"
                    }
                }
            }
        },
        "/items": {
            "get": {
                "tags": [
                    "Item"
                ],
                "description": "Finds all items in the database with optional query parameters",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "vendorName",
                        "in": "query",
                        "description": "Filter by vendor name (case-sensitive)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "prodName",
                        "in": "query",
                        "description": "Filter by product name (case-sensitive)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "SKU",
                        "in": "query",
                        "description": "Filter by SKU",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Filter by category",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "item response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/item"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Item"
                ],
                "description": "Add a new item",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Item to add",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/item"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "invalid input"
                    },
                    "409": {
                        "description": "Item with the same SKU exists"
                    }
                }
            }
        },
        "/items/{SKU}": {
            "get": {
                "tags": [
                    "Item"
                ],
                "description": "Find item by SKU",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "SKU",
                        "in": "path",
                        "description": "SKU of item to fetch",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "item response",
                        "schema": {
                            "$ref": "#/definitions/item"
                        }
                    },
                    "404": {
                        "description": "item not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Item"
                ],
                "description": "Update an existing item",
                "parameters": [
                    {
                        "name": "SKU",
                        "in": "path",
                        "description": "SKU of item to fetch",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Specify the fields to change, in JSON format. Only fields you want to change are necessary",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/item"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "item updated"
                    },
                    "404": {
                        "description": "item not found"
                    },
                    "409": {
                        "description": "new SKU already used by existing item"
                    },
                    "500": {
                        "description": "an unexpected error occured"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Item"
                ],
                "description": "deletes an item based on the SKU supplied",
                "parameters": [
                    {
                        "name": "SKU",
                        "in": "path",
                        "description": "SKU of item to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "item deleted"
                    },
                    "404": {
                        "description": "item not found"
                    },
                    "500": {
                        "description": "an unexpected error occured"
                    }
                }
            }
        }
    },
    "definitions": {
        "member": {
            "required": [
                "email",
                "firstName",
                "lastName",
                "hashedPassword"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "mobileNumber": {
                    "type": "string"
                },
                "hashedPassword": {
                    "type": "string"
                }
            }
        },
        "item": {
            "required": [
                "vendorName",
                "prodName",
                "prodDesc",
                "SKU",
                "category",
                "price"
            ],
            "properties": {
                "vendorName": {
                    "type": "string"
                },
                "prodName": {
                    "type": "string"
                },
                "prodDesc": {
                    "type": "string"
                },
                "SKU": {
                    "type": "string"
                },
                "category": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "numRatings": {
                    "type": "number"
                },
                "avgRating": {
                    "type": "number"
                }
            }
        }
    }
}